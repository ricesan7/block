<!doctype html>

<html lang="ja">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
  <title>Brick Breaker+ (Retro Controller Theme)</title>
  <style>
    :root {
      --bg:#1a1a1a; --bg2:#0d0d0d; --fg:#e0e0c0; --accent:#f0d060; --muted:#a0a080;
      --brick:#d04040; --brick2:#40a040; --brick3:#4060d0;
      --green:#50c878; --yellow:#f0e68c; --glass:#222222aa;
      --btn-red:#b71c1c; --btn-red-dark:#7f0000;
      --btn-green:#1b5e20; --btn-green-dark:#003300;
      --btn-gray:#555; --btn-gray-dark:#222;
    }
    * { box-sizing: border-box; }
    html, body { height: 100%; }
    body { margin:0; font-family: ui-monospace, Menlo, Consolas, monospace; background: var(--bg2); color: var(--fg); display:grid; min-height:100vh; place-items:start center; }
    .wrap { width:min(980px, 96vw); padding:8px 8px calc(env(safe-area-inset-bottom, 0) + 8px); }
    header { display:flex; align-items:center; justify-content:space-between; gap:8px; margin-bottom:6px; }
    h1 { font-size:14px; margin:0; color:var(--accent); letter-spacing:1px; }
    .controls { display:flex; gap:6px; flex-wrap:wrap; }
    button { padding:6px 10px; border-radius:4px; border:2px solid var(--fg); background: var(--bg); color:var(--fg); cursor:pointer; font-family:inherit; font-size:10px; }
    button:hover { background: var(--fg); color: var(--bg); }
    .panel { display:flex; align-items:center; gap:8px; color:var(--muted); flex-wrap:wrap; padding:4px 6px; border-radius:4px; background: var(--glass); border:2px solid var(--fg); font-size:10px; }
    .badge { padding:1px 4px; border-radius:2px; border:1px solid var(--fg); background:var(--bg2); font-size:9px; color:var(--accent); }
    .score { font-weight:700; color:var(--accent); }
    #screen { display:block; background:var(--bg); border:2px solid var(--fg); image-rendering: pixelated; touch-action: none; margin:0 auto; }
    footer { margin-top:6px; font-size:9px; color:var(--muted); display:flex; justify-content:space-between; gap:6px; flex-wrap:wrap; }
    kbd { background:var(--bg); border:1px solid var(--fg); padding:1px 3px; font-family:inherit; font-size:9px; }/* Mobile Controller */
.mobile-pad { display:none; justify-content:space-between; align-items:center; gap:16px; margin-top:8px; padding:6px 0; }
.mobile-pad .dpad { display:grid; grid-template-columns: 48px 48px 48px; grid-template-rows: 48px 48px 48px; gap:6px; }
.mobile-pad .dpad .spacer { visibility:hidden; }
.mobile-pad .buttons { display:flex; align-items:center; gap:14px; }

/* NES/GB style buttons */
.mobile-pad button { width:48px; height:48px; border-radius:50%; font-size:14px; touch-action: none; font-family:inherit; color:#fff; font-weight:bold; box-shadow: inset -3px -3px 0 var(--btn-gray-dark); }
#dpadUp, #dpadDown, #dpadLeft, #dpadRight { background:var(--btn-gray); border:2px solid var(--btn-gray-dark); }
#btnA { background:var(--btn-red); border:2px solid var(--btn-red-dark); }
#btnB { background:var(--btn-green); border:2px solid var(--btn-green-dark); }
.mobile-pad button:active { transform:translateY(2px); box-shadow: inset 1px 1px 0 rgba(0,0,0,0.6); }

@media (max-width: 768px){ .mobile-pad { display:flex; } }

/* 選択/ドラッグ抑止 */
body, .wrap, #screen, .mobile-pad, .mobile-pad * { -webkit-user-select:none; user-select:none; -webkit-touch-callout:none; -webkit-tap-highlight-color: transparent; }
#screen, .mobile-pad button { -webkit-user-drag: none; user-drag: none; }
  /* === Controller Themes === */
:root{
  /* generic controller vars (fallbacks) */
  --ctrl-surface: #0f0f0f;   /* pad base */
  --ctrl-border:  #e0e0c0;   /* outlines */
  --ctrl-dpad:    #3a3a3a;   /* dpad body */
  --ctrl-dpad-fg: #d9d9d9;   /* dpad arrow */
  --ctrl-a:       #b11717;   /* A button */
  --ctrl-b:       #7d0f0f;   /* B button */
  --ctrl-ab-fg:   #f3e6c0;   /* letters */
  --ctrl-shadow:  rgba(0,0,0,.45);
}
body[data-theme="gb"]{
  --ctrl-surface:#1d2b1d; --ctrl-border:#b8d38b; --ctrl-dpad:#2f3a2f; --ctrl-dpad-fg:#cfe6a3;
  --ctrl-a:#7b2f6a; --ctrl-b:#5e2552; --ctrl-ab-fg:#e6ffd2; --ctrl-shadow:rgba(0,0,0,.45);
}

/* controller layout refinements */
.mobile-pad { display:none; justify-content:space-between; align-items:center; gap:16px; margin-top:8px; padding:10px 6px; background:var(--ctrl-surface); border:2px solid var(--ctrl-border); border-radius:8px; }
.mobile-pad .dpad { display:grid; grid-template-columns: 56px 56px 56px; grid-template-rows: 56px 56px 56px; gap:8px; }
.mobile-pad .dpad .spacer { visibility:hidden; }
.mobile-pad .buttons { display:flex; align-items:center; gap:18px; }
.mobile-pad button { width:56px; height:56px; border-radius:8px; font-size:16px; touch-action:none; background:var(--bg2); border:2px solid var(--ctrl-border); color:var(--fg); font-family:inherit; box-shadow: 0 2px 0 var(--ctrl-shadow); transition: transform .02s ease; }
.mobile-pad button:active, .mobile-pad button.pressed { transform: translateY(1px); box-shadow: 0 1px 0 var(--ctrl-shadow); }
/* D-Pad look */
#dpadUp, #dpadDown, #dpadLeft, #dpadRight { background: var(--ctrl-dpad); color: var(--ctrl-dpad-fg); }
/* AB look */
#btnA, #btnB { border-radius: 999px; color: var(--ctrl-ab-fg); }
#btnA { background: var(--ctrl-a); }
#btnB { background: var(--ctrl-b); }
@media (max-width: 768px){ .mobile-pad { display:flex; } }

/* selection/drag prevention keeps as previously set */

  </style>
</head>
<body>
  <div class="wrap">
    <header>
      <h1>Brick Breaker+ Retro</h1>
      <div class="controls">
        <button id="btnStart">▶︎/⏸</button>
        <button id="btnReset">⟲</button></div>
</header>
<div class="panel" id="scorePanel">
  <div>SCORE:<span id="score" class="score">0</span></div>
  <div>LIVES:<span id="lives">3</span></div>
  <div>LV:<span id="level">1</span></div>
  <div>x<span id="mult">1.00</span></div>
  <div>FPS:<span id="fps">0</span></div>
  <div id="powerBadges" class="badge">NO POWER</div>
</div>
<canvas id="screen" aria-label="game screen" role="img"></canvas>
<div class="mobile-pad" id="mobilePad" aria-label="virtual controls">
  <div class="dpad" aria-label="dpad left">
    <span class="spacer"></span>
    <button id="dpadUp">▲</button>
    <span class="spacer"></span>
    <button id="dpadLeft">◀</button>
    <span class="spacer"></span>
    <button id="dpadRight">▶</button>
    <span class="spacer"></span>
    <button id="dpadDown">▼</button>
    <span class="spacer"></span>
  </div>
  <div class="buttons" aria-label="action buttons right">
    <button id="btnA">A</button>
    <button id="btnB">B</button>
  </div>
</div>
<footer>
  <div><kbd>←</kbd><kbd>→</kbd> MOVE / <kbd>SPACE</kbd>● LAUNCH / <kbd>P</kbd> PAUSE</div>
</footer>

  </div>  <script>
    // Controller binding (一部省略、既存ゲーム処理はそのまま)
    const mobile = {left:false,right:false,launch:false};
    function bindHold(btnId, on, off){ const btn=document.getElementById(btnId); if(!btn) return; const down=e=>{e.preventDefault();on();}; const up=e=>{e.preventDefault();off();}; btn.addEventListener('pointerdown',down,{passive:false}); btn.addEventListener('pointerup',up,{passive:false}); btn.addEventListener('pointerleave',up,{passive:false}); btn.addEventListener('pointercancel',up,{passive:false}); }
    bindHold('dpadLeft', ()=>mobile.left=true, ()=>mobile.left=false);
    bindHold('dpadRight', ()=>mobile.right=true, ()=>mobile.right=false);
    bindHold('dpadUp', ()=>{}, ()=>{});
    bindHold('dpadDown', ()=>{}, ()=>{});
    const btnA=document.getElementById('btnA'); btnA?.addEventListener('pointerdown', e=>{ e.preventDefault(); mobile.launch=true; }, {passive:false});
    const btnB=document.getElementById('btnB'); btnB?.addEventListener('pointerdown', e=>{ e.preventDefault(); playing=!playing; startBtn.textContent=playing?'⏸':'▶︎'; }, {passive:false});

    // グローバルな選択/ドラッグ抑止
    ['selectstart','dragstart','contextmenu'].forEach(ev=>{
      document.addEventListener(ev, e=>{
        if ((e.target instanceof HTMLElement) && (e.target.closest('#mobilePad') || e.target.id==='screen')){
          e.preventDefault();
        }
      }, {passive:false});
    });
      // 固定テーマ: GAME BOY デザインのみ適用
    document.body.setAttribute('data-theme','gb');

    // Visual pressed feedback for touch
    document.getElementById('mobilePad')?.querySelectorAll('button').forEach(btn=>{
      btn.addEventListener('pointerdown', ()=>btn.classList.add('pressed'));
      ['pointerup','pointerleave','pointercancel'].forEach(ev=>btn.addEventListener(ev, ()=>btn.classList.remove('pressed')));
    });

    // keep existing drag/select prevention
  </script></body>
</html>
